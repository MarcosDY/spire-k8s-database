apiVersion: v1
kind: Namespace
metadata:
  name: api-ns

---

kind: Service
apiVersion: v1
metadata:
  name: api
  namespace: api-ns
spec:
  type: NodePort
  ports:
    - name: http
      port: 9001
      protocol: TCP
      targetPort: 9001
  selector:
    app: api

---

# Envoy configuration.
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: api-ns
data:
  envoy.yaml: |
    node:
      id: "id_03"
      cluster: "cluster_03"
    # Enable admin endpoint
    admin:
      access_log_path: /tmp/admin_access0.log
      address:
        socket_address:
          protocol: TCP
          address: 127.0.0.1
          port_value: 8001
    static_resources:
      listeners:
      - name: listener-sds-mtls
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 9001
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              common_http_protocol_options:
                idle_timeout: 1s
              forward_client_cert_details: sanitize_set
              set_current_client_cert_details:
                uri: true
              codec_type: auto
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog 
                  path: "/tmp/envoy-access-8001.log"
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: customer_service
              http_filters:
                - name: envoy.filters.http.router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificate_sds_secret_configs:
                  # expected envoy identity
                - name: "spiffe://example.org/api-proxy"
                  sds_config:
                    api_config_source:
                      api_type: GRPC
                      grpc_services:
                        envoy_grpc:
                          cluster_name: spire_agent
                      transport_api_version: V3
                    resource_api_version: V3
                combined_validation_context:
                  # validate the SPIFFE ID of incoming clients (optionally)
                  default_validation_context:
                    match_subject_alt_names:
                      exact: "spiffe://example.org/client-proxy"
                  # obtain the trust bundle from SDS
                  validation_context_sds_secret_config:
                    name: "spiffe://example.org"
                    sds_config:
                      api_config_source:
                        api_type: GRPC
                        grpc_services:
                          envoy_grpc:
                            cluster_name: spire_agent
                        transport_api_version: V3
                      resource_api_version: V3
                tls_params:
                  ecdh_curves:
                    - X25519:P-256:P-521:P-384

      clusters:
      - name: spire_agent
        connect_timeout: 0.25s
        http2_protocol_options: {}
        load_assignment:	
          cluster_name: spire_agent
          endpoints:	
          - lb_endpoints:	
            - endpoint:	
                address:	
                  pipe:	
                    path: /run/spire/sockets/api.sock
      - name: customer_service
        connect_timeout: 0.25s
        type: strict_dns
        load_assignment:	
          cluster_name: spire-cluster
          endpoints:	
          - lb_endpoints:	
            - endpoint:	
                address:	
                  socket_address:	
                    address: 127.0.0.1
                    port_value: 8000

---

# API configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config
  namespace: api-ns
data:
  api.conf: |
    host = "0.0.0.0"
    port = 8000
    # host format: {service}.{ns}
    db_host = "customer-db.postgres-ns"
    db_port = 5432
    db_user = "symuser"
    db_name = "demodb"
    agent_sock = "unix:///run/spire/sockets/api.sock"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: api-ns
spec:
  selector:
    matchLabels:
      app: api
  replicas: 1
  revisionHistoryLimit: 5
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        # API container
        - name: api
          image: api-service:latest-local
          imagePullPolicy: IfNotPresent
          args: ["-config", "/run/api/config/api.conf"]
          volumeMounts:
            # Mount api config files
            - name: api-config
              mountPath: /run/api/config
              readOnly: true
            # Mount SPIRE-Agent socket
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
        # Envoy container configured with a mTls listener
        - name: api-proxy
          image: envoyproxy/envoy:v1.17.0
          imagePullPolicy: IfNotPresent
          command: ["/usr/local/bin/envoy"]
          args: ["-c", "/run/envoy/config/envoy.yaml", "-l", "debug"]
          ports:
            - containerPort: 8001
              protocol: TCP
              name: envoy-customer
          volumeMounts:
            # Mount Envoy config file
            - name: envoy-config
              mountPath: /run/envoy/config
              readOnly: true
            # Mount agent socket
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
      volumes:
        - name: api-config
          configMap:
            name: api-config
        - name: spiffe-helper-config
          configMap:
            name: spiffe-helper-config
        - name: envoy-config
          configMap:
            name: envoy-config
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/agent-sockets
            type: Directory

